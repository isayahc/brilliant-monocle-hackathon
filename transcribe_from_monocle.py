import monocle_utils
import utils   

async def transcribe_text_from_monocle(
        audio_server:monocle_utils.MonocleAudioServer, 
        model_size:str, 
        ) -> str:
    """
    Handle a single turn of the conversation by receiving audio input, transcribing it, generating a response,
    and playing the response as speech.

    :param audio_server: The MonocleAudioServer to receive audio input.
    :type audio_server: monocle_utils.MonocleAudioServer
    :param model_size: The size of the model used for transcription.
    :type model_size: str
    :param conversation_with_kg: The conversation chain to use.
    :type conversation_with_kg: ConversationChain
    :return: The response generated by the conversation chain.
    :rtype: dict
    """
    await audio_server.send_payload()
    audio_server.write_audio()
    transcribed_text = utils.transcribe(monocle_utils.AUDIO_OUTPUT_PATH, model_size)
    return transcribed_text